/**
 * Script para testar a conex√£o robusta com PostgreSQL
 * Este script verifica se a conex√£o est√° funcionando corretamente
 * usando o m√≥dulo de conex√£o robusta otimizada.
 */

// Importar o m√≥dulo de conex√£o robusta otimizada
const db = require('./conexao-robusta-otimizada');

async function testarConexao() {
  try {
    console.log('üîç Testando conex√£o robusta com PostgreSQL...');
    
    // Inicializar a conex√£o
    await db.inicializar();
    
    // Obter informa√ß√µes de conex√£o
    const infoConexao = await db.executarQuery('SELECT current_database() as db, current_user as usuario, inet_server_addr() as servidor, inet_server_port() as porta');
    const info = infoConexao.rows[0];
    
    console.log(`\nüîå Conex√£o estabelecida!`);
    console.log(`üì° Servidor: ${info.servidor}`);
    console.log(`üî¢ Porta: ${info.porta}`);
    console.log(`üìä Database: ${info.db}`);
    console.log(`üë§ Usu√°rio: ${info.usuario}`);
    
    // Verificar vers√£o do PostgreSQL
    const versao = await db.executarQuery('SELECT version()');
    console.log(`\nüîÑ Vers√£o do PostgreSQL:`);
    console.log(versao.rows[0].version);
    
    // Verificar tabelas dispon√≠veis
    const tabelas = await db.executarQuery(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
      ORDER BY table_name
    `);
    
    console.log(`\nüìã Tabelas dispon√≠veis: ${tabelas.rows.length}`);
    console.table(tabelas.rows);
    
    // Verificar usu√°rios
    const usuariosQry = await db.executarQuery(`
      SELECT COUNT(*) as total FROM cad_emp_user
    `);
    
    const usuariosTotal = usuariosQry.rows[0].total;
    console.log(`\nüë• Total de usu√°rios: ${usuariosTotal}`);
    
    if (usuariosTotal > 0) {
      // Mostrar estat√≠sticas
      console.log('\nüìä Estat√≠sticas do Drive Vale-Sis:');
      
      // Usu√°rios por perfil
      const usuariosPorPerfil = await db.executarQuery(`
        SELECT p.tipo, COUNT(*) as total
        FROM cad_emp_user u
        JOIN perfil_acesso p ON u.perfil_id = p.id
        GROUP BY p.tipo
        ORDER BY total DESC
      `);
      console.log('\nüë• Usu√°rios por perfil:');
      console.table(usuariosPorPerfil.rows);
      
      // Arquivos por categoria
      const arquivosPorCategoria = await db.executarQuery(`
        SELECT c.nome as categoria, COUNT(*) as total_arquivos
        FROM metadados_arquivos a
        JOIN categorias_arquivos c ON a.categoria_id = c.id
        GROUP BY c.nome
        ORDER BY total_arquivos DESC
      `);
      console.log('\nüìÅ Arquivos por categoria:');
      console.table(arquivosPorCategoria.rows);
      
      // Compartilhamentos
      const totalCompartilhamentos = await db.executarQuery(`
        SELECT COUNT(*) as total FROM compartilhamento_arquivos WHERE ativo = TRUE
      `);
      console.log(`\nüîÑ Total de compartilhamentos ativos: ${totalCompartilhamentos.rows[0].total}`);
    }
    
    console.log('\n‚úÖ Teste de conex√£o conclu√≠do com sucesso!');
    
  } catch (erro) {
    console.error('\n‚ùå Erro ao testar conex√£o:', erro);
  } finally {
    // Fechar a conex√£o
    await db.fechar();
    console.log('\nüëã Conex√£o encerrada');
  }
}

// Executar o teste
testarConexao();
